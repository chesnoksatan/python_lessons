# todo: Десериализация
# Напишите программу, которая принимает на вход название JSON файла, десериализует содержащийся в этом файле объект и выводит его.
#
# если файла с данным названием нет в папке с программой, программа должна вывести текст:
# Файл не найден
# если файл с данным названием содержит некорректные данные (то есть не удовлетворяющие формату JSON), программа должна вывести текст:
# Ошибка при десериализации
#
# На вход программе подается название JSON файла.
#
#
# Программа должна десериализовать объект, содержащийся в файле с введенным названием, и вывести его. Если при поиске файла или десериализации его содержимого произошла ошибка, программа должна вывести соответствующий текст.
#
# Примечание 1. Название подаваемого файла уже содержит расширение.
#
# Примечание 2. Тестируемый файл numbers.json имеет следующее содержание
#
# [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

# numbers.json
# Sample Output 1:
#
# [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

#
# Ошибка при десериализации

import json
from argparse import ArgumentParser


version = "0.0.1"
parser = ArgumentParser(prog="json")
parser.add_argument("-v", "--version", action="version", version=version)
parser.add_argument("file", help="Принимает файл для чтения")


if __name__ == "__main__":
    args = parser.parse_args()
    file = args.file

    try:
        with open(file, "r", encoding="UTF-8") as f:
            obj = json.load(f)
    except FileExistsError:
        print('Файл не найден')
    except json.JSONDecodeError:
        print('Ошибка при десериализации')